{"version":3,"sources":["webpack:///./src/styles/index.module.sass","webpack:///./src/pages/index.js"],"names":["module","exports","_ref","data","siteMetadata","site","chapters","allMarkdownRemark","edges","map","_ref2","node","slug","fields","title","frontmatter","description","React","createElement","Layout","isHome","Logo","className","classes","logo","aria-label","subtitle","introduction","_ref3","key","chapter","chapterTitle","Link","hidden","to","chapterDesc"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,YAAY,QAAU,WAAW,aAAe,YAAY,YAAc,WAAW,SAAW,YAAY,aAAe,c,kCCDpJ,kGASeC,cAAe,IAAd,KAAEC,GAAMD,EACpB,MAAME,EAAeD,EAAKE,KAAKD,aACzBE,EAAWH,EAAKI,kBAAkBC,MAAMC,IAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAM,CAC7DE,KAAMD,EAAKE,OAAOD,KAClBE,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,eAElC,OACIC,IAAAC,cAACC,IAAM,CAACC,QAAM,GACVH,IAAAC,cAACG,IAAI,CAACC,UAAWC,IAAQC,KAAMC,aAAYrB,EAAaU,QACxDG,IAAAC,cAAA,eAEID,IAAAC,cAAA,MAAII,UAAWC,IAAQG,UAAUT,IAAAC,cAAA,cAAQ,gDACzCD,IAAAC,cAAA,OAAKI,UAAWC,IAAQI,cACxBV,IAAAC,cAAA,UAEAD,IAAAC,cAAA,cACAD,IAAAC,cAAA,SAAG,iMAOHD,IAAAC,cAAA,SAAG,8NASNZ,EAASG,IAAImB,IAAA,IAAC,KAAEhB,EAAI,MAAEE,EAAK,YAAEE,GAAaY,EAAA,OACvCX,IAAAC,cAAA,WAASW,IAAKjB,EAAMU,UAAWC,IAAQO,SACnCb,IAAAC,cAAA,MAAII,UAAWC,IAAQQ,cACnBd,IAAAC,cAACc,IAAI,CAACC,QAAM,EAACC,GAAItB,GACZE,IAGTG,IAAAC,cAAA,KAAGI,UAAWC,IAAQY,aAClBlB,IAAAC,cAACc,IAAI,CAACC,QAAM,EAACC,GAAItB,GACZI","file":"component---src-pages-index-js-0a20b76ef5ded99fe745.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"_2c0ad1d3\",\"chapter\":\"c72e2d57\",\"chapterTitle\":\"_5e0ebe7a\",\"chapterDesc\":\"de526628\",\"subtitle\":\"_011ab68b\",\"introduction\":\"_2ad7c130\"};","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport { Link } from '../components/link'\nimport Logo from '../../static/logo.svg'\n\nimport classes from '../styles/index.module.sass'\n\nexport default ({ data }) => {\n    const siteMetadata = data.site.siteMetadata\n    const chapters = data.allMarkdownRemark.edges.map(({ node }) => ({\n        slug: node.fields.slug,\n        title: node.frontmatter.title,\n        description: node.frontmatter.description,\n    }))\n    return (\n        <Layout isHome>\n            <Logo className={classes.logo} aria-label={siteMetadata.title} />\n            <section>\n\n                <h1 className={classes.subtitle}><center>Welcome to EarthCube Interactive Workshops!</center></h1>\n                <div className={classes.introduction}>\n                <p></p>\n\n                <center>\n                <p>\n                    These short courses will teach you how to conduct reproducible \n                    research using Data Sciences tools.  \n\n                    You will be working with R Markdown, Docker containerization,\n                    and Git for version control.  \n                </p>\n                <p>\n                    After these modules, you will be able to process your own research\n                    in a format suitable for analysis, writing your own analysis functions,\n                    and deriving data-driven insights via RMarkdown files and Jupyter Notebooks.\n                </p>\n                </center>\n                </div>\n  \n            </section>\n            {chapters.map(({ slug, title, description }) => (\n                <section key={slug} className={classes.chapter}>\n                    <h2 className={classes.chapterTitle}>\n                        <Link hidden to={slug}>\n                            {title}\n                        </Link>\n                    </h2>\n                    <p className={classes.chapterDesc}>\n                        <Link hidden to={slug}>\n                            {description}\n                        </Link>\n                    </p>\n                </section>\n            ))}\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___title], order: ASC }\n            filter: { frontmatter: { type: { eq: \"chapter\" } } }\n        ) {\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}