{"componentChunkName":"component---src-templates-chapter-js","path":"/module6","result":{"data":{"site":{"siteMetadata":{"courseId":"RLeapFROGS"}},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"exercise","properties":{"id":"1","title":"Reproducible workflows and open science"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sharing reproducible scientific workflows involves creating, documenting, and disseminating processes, tools, and data that allow others to fully understand, replicate, and extend your scientific work. It includes the following components:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Transparency"}]},{"type":"text","value":": Clearly document every step of your research process, from data collection and preprocessing to analysis and visualization. This ensures others can see exactly what was done. One of the most effective way to do so is to use electronic notebooks such as Jupyter Notebooks or RMarkDown. If not using these technologies, it is highly recommended to document the steps in a ReadMe file showing which scripts to invoke with the appropriate input and what outputs are expected. Remember that doing science is not simply about whether the code executes but also that it provides the right output. So make sure to describe what is expected (e.g., an increasing trend or a tolerance level less than 10)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Documentation"}]},{"type":"text","value":": Provide comprehensive metadata, annotations, and instructions for using your workflow, including dependencies, software versions, and any assumptions made during analysis."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Automation"}]},{"type":"text","value":": Use tools like scripts or workflow managers to automate processes, reducing the likelihood of errors and ensuring consistent results. We have talked about GitHub actions in the Github lecture. Another concept is continuous integration, which we will cover in a subsequent module. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Open Tools and Standards"}]},{"type":"text","value":": Share code, software, and data in widely accessible formats using platforms like GitHub, Zenodo, or institutional repositories."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Reusability"}]},{"type":"text","value":": Design workflows to be modular and generalizable, so they can be adapted to other datasets or research questions."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"FAIR Principles"}]},{"type":"text","value":": Ensure workflows and data adhere to principles of being Findable, Accessible, Interoperable, and Reusable."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A way to meet all of these requirements is to serve your code through a container, which we will cover in this module. "}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"2","title":"Introduction to Docker, Binder and myBinder","type":"slides"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"slides","properties":{"source":"chapter6_01_docker,_binder"},"children":[{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"3","title":"Container repositories","type":"slides"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"slides","properties":{"source":"chapter6_03_ContainerRepo"},"children":[{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"4","title":"Encapsulating your computational environment","type":"slides"},"children":[{"type":"text","value":"\n \n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"5","title":"Creating Docker Containers","type":"slides"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"slides","properties":{"source":"chapter6_05_CreatingContainer"},"children":[{"type":"text","value":"\n \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"6","title":"Using Binder and myBinder","type":"slides"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"slides","properties":{"source":"chapter6_06_Binder_and_myBinder"},"children":[{"type":"text","value":"\n \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"7","title":"Test your understanding"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What best describes a container in the context of computing?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"choice","properties":{"id":"06-01"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A virtual machine that emulates an entire operating system."},"children":[{"type":"text","value":"\nA virtual machine (VM) emulates an entire operating system, which includes the kernel and hardware abstraction, making it heavier and slower than containers. Containers share the host OS kernel, making them lightweight.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A lightweight, portable unit that packages software and its dependencies.",",":"","correct":"True"},"children":[{"type":"text","value":"\nContainers package an application and its dependencies into a portable unit, ensuring consistency and reproducibility across different computing environments.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A hardware device used to store large datasets securely."},"children":[{"type":"text","value":"\nContainers are not hardware devices. They are software-based and unrelated to physical storage devices.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A protocol for transferring data between servers."},"children":[{"type":"text","value":"\nContainers are not protocols; they are environments for running software in isolated and reproducible conditions.\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What best describes Binder in the context of computational workflows?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"choice","properties":{"id":"06-02"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A tool for version control and collaboration on code repositories."},"children":[{"type":"text","value":"\nVersion control tools like Git handle collaboration and tracking changes in code. Binder focuses on creating live, executable environments.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A software library for managing dependencies in a project."},"children":[{"type":"text","value":"\nTools like Conda or pip manage dependencies; Binder uses these specifications to set up environments but is not itself a dependency manager.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A service that creates shareable, interactive environments for running code.",",":"","correct":"True"},"children":[{"type":"text","value":"\nBinder is designed to take a GitHub repository with code and environment specifications (e.g., `environment.yml`) and create a live, interactive environment that can run the code, often in Jupyter notebooks.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"A hardware-based solution for executing high-performance computations."},"children":[{"type":"text","value":"\nBinder is a cloud-based service, not a hardware solution.\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What is the primary purpose of a container repository?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"choice","properties":{"id":"06-03"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To provide cloud storage for large datasets."},"children":[{"type":"text","value":"\nContainer repositories are not used for storing datasets. They store container images, which are pre-packaged environments for running software.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To manage and execute containers in a high-performance environment."},"children":[{"type":"text","value":"\nContainer execution is handled by runtime environments like Docker or Kubernetes, not by the repository itself.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To store, distribute, and share container images.",",":"","correct":"True"},"children":[{"type":"text","value":"\nA container repository, such as DockerHub or Quay.io, serves as a central platform to store and share container images, enabling reproducibility and collaboration.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To create and package containers based on environment files."},"children":[{"type":"text","value":"\nContainers are built locally or through automation workflows (e.g., GitHub Actions), and the repository is used to store and distribute the finished container images.\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What is the best way to encapsulate a computational environment to ensure reproducibility and ease of sharing across different systems?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"choice","properties":{"id":"06-04"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Manually list the installed packages in a text file."},"children":[{"type":"text","value":"\nManually listing packages is prone to errors, omissions, and inconsistencies, making it unreliable for reproducibility.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Provide a written guide for users to install the necessary software on their own systems."},"children":[{"type":"text","value":"\nWhile guides may help, they rely on users manually following instructions, leading to potential inconsistencies and wasted time.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Save the entire operating system state as a virtual machine."},"children":[{"type":"text","value":"\nSaving an entire operating system as a virtual machine is overkill for most workflows and much less efficient than using environment files or containers.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Use a standardized environment file to define all dependencies and their versions.",",":"","correct":"True"},"children":[{"type":"text","value":"\nA standardized environment file (e.g., `environment.yml` for Conda or `requirements.txt` for Python, and `.Rprofile` or `.lock` files in R) is the best approach for defining all dependencies, versions, and configurations in a structured, machine-readable format. This ensures reproducibility and allows others to recreate the exact environment.\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What is the correct process to create a Docker container for your computational workflow?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"choice","properties":{"id":"06-05"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Write an environment file, upload it to DockerHub, and the container will be created automatically."},"children":[{"type":"text","value":"\nDockerHub is a repository for storing and sharing container images, but it does not create containers automatically from an environment file.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Install Docker, write a Dockerfile defining the environment and dependencies, then build the container using Docker commands.",",":"","correct":"True"},"children":[{"type":"text","value":"\nTo create a Docker container, you define the environment, dependencies, and steps in a Dockerfile. This file acts as a blueprint for building the container. The docker build command then packages everything into an image, which can be run as a container.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Use a graphical user interface (GUI) in Docker to manually install dependencies into a container."},"children":[{"type":"text","value":"\nDocker does not provide a GUI for manually creating containers; the process relies on command-line tools and scripts for reproducibility.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Copy all your project files into a virtual machine and export it as a Docker image."},"children":[{"type":"text","value":"\nVirtual machines are not the same as containers. Docker containers are lightweight and created using Dockerfile, not virtual machine snapshots.\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What is the primary purpose of "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"myBinder"}]},{"type":"text","value":" in scientific workflows?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"choice","properties":{"id":"06-06"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To provide an interactive, shareable environment for running code from a GitHub repository.",",":"","correct":"True"},"children":[{"type":"text","value":"\nmyBinder turns a GitHub repository into an interactive environment that runs in the cloud. It is especially useful for sharing reproducible scientific workflows or teaching materials that others can run without local setup.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To manage dependencies and package software for computational workflows."},"children":[{"type":"text","value":"\nWhile you can share code results using tools like Jupyter notebooks, myBinder’s purpose is to provide live, interactive environments, not static reports.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"Use a graphical user interface (GUI) in Docker to manually install dependencies into a container."},"children":[{"type":"text","value":"\nTools like Conda or pip manage dependencies, but myBinder uses these to build environments for execution rather than managing the dependencies itself.\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"opt","properties":{"text":"To secure large-scale data storage for research projects."},"children":[{"type":"text","value":"\nmyBinder is not designed for storing data but for providing executable computational environments.\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"exercise","properties":{"id":"8","title":"Hands-on exercise"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using an existing repository (e.g., the one you created in Module 5):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Create an environment file (you may do so by using branches for practice)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Set up your notebook using "},{"type":"element","tagName":"a","properties":{"href":"https://mybinder.org"},"children":[{"type":"text","value":"myBinder"}]},{"type":"text","value":". Make sure that your notebook executes on the site. Sometimes this requires a lot of trial and error."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Update your README with a myBinder badge for a one-click sharing of your workflows."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using a GitHub action, create a Docker container and make it available on "},{"type":"element","tagName":"a","properties":{"href":"https://quay.io"},"children":[{"type":"text","value":"Quay.io"}]},{"type":"text","value":". You may use this "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/LinkedEarth/Pyleoclim_util/blob/master/.github/workflows/build.yml"},"children":[{"type":"text","value":"workflow file"}]},{"type":"text","value":"\nas an inspiration. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Update your README with instructions on how to run the Docker container. Make sure it works on your machine as well!"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"id":6,"title":"Module 6: Sharing Reproducible Workflows","description":"This module provides fundamental information about using containers to share your research.","next":null,"prev":"/module5"}}},"pageContext":{"slug":"/module6"}},"staticQueryHashes":["1029480139","1771538597","3063084251","4240431937"]}